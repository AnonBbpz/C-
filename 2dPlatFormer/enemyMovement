public float enemySpeed;
Animator enemyAnim;

public GameObject enemyGraphic;
bool canFlip=true;
float flipTime=5f;
float nextFlipChance=0f;

public float chargeTime;
public float startChargeTime;
bool charging;
Rigidbody2D enemyRb;

void Start(){
enemyAnimator=GetComponant<Animator>();
enemyRb=GetComponant<Rigidbody2D>();

}

void Update(){
if(Time.time > nextFlipChance){
if(Random.Range (0,10)>5) flipFacing();
nextFlipChance=Time.time + flipTime;
}
}

void OnTriggerEnter2D(Collider2D other){
if(other.tag == "Player"){
if(facingRight && other.transform.position.x < transform.position.x){
flipFacing();
}else if(!facingRight && other.transform.position.x > transform.position.x){
flipFacing();
}
canFlip=False;
charging=true;
startChargeTimne=Time.time + chargeTime
}
}
}

void OnTriggerStay2D(Collider2D other){
if(other.taag == "Player"){
if(startChargeTime < Time.time){
if(!facingRight) enemyRb.AddForce(new Vector2(-1,0)*enemySpeed);
else enemyAnim.SetBool("isCharging"charging);
}
}
}

void OnTriggerExit(Collider2D other){
if(other.tag == "Player"){
canFlip=true;
charging=false;
enemyRb.velocity=new Vector2(0f,0f);
enemyAnim.SetBool("isCharging"'charging);
}
}


void flipFacing(){
if(!canFlip) return;
float facingX=enemyGraphic.transform.localScale.x;
facingX *= -1f;
enemyGraphic.transform.locacalScale.x = new Vector3(facingX,enemyGraphic.transform.localScale.y,enemyGraphic.transform.z);
facingRight = !facingRight;
}
}
